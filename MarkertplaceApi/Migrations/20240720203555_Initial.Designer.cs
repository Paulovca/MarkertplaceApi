// <auto-generated />

using MarkertplaceApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MarkertplaceApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240720203555_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MarkertplaceApiModels.Item", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("price")
                        .HasColumnType("float");

                    b.Property<int>("quantityAvailable")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            id = 1,
                            description = "It takes photos",
                            name = "Camera",
                            price = 18.989999999999998,
                            quantityAvailable = 100
                        },
                        new
                        {
                            id = 2,
                            description = "Best audio quality",
                            name = "Microphone",
                            price = 30.989999999999998,
                            quantityAvailable = 10
                        },
                        new
                        {
                            id = 3,
                            description = "Mechanical switches",
                            name = "Keyboard",
                            price = 10.99,
                            quantityAvailable = 30
                        },
                        new
                        {
                            id = 4,
                            description = "Gamer mouse",
                            name = "Mouse",
                            price = 5.9900000000000002,
                            quantityAvailable = 200
                        },
                        new
                        {
                            id = 5,
                            description = "Good for work",
                            name = "Notebook",
                            price = 999.99000000000001,
                            quantityAvailable = 22
                        },
                        new
                        {
                            id = 6,
                            description = "Good for drawing",
                            name = "Tablet",
                            price = 180.99000000000001,
                            quantityAvailable = 1
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
